{"ast":null,"code":"var _jsxFileName = \"/Users/arnaullobet/Desktop/PAE/DOCBLOCK/react-dapp/client/src/Pages/loginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../Components/navbar';\nimport Footer from '../Components/footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [isCompany, setChecked] = useState(false);\n\n  function isRegistered(registered) {\n    for (let i = 0; i < registered.length; ++i) {\n      if (registered[i].email === email) return true;\n    }\n\n    return false;\n  }\n\n  const handleCheck = () => {\n    setChecked(!isCompany);\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault(); //comprobacion de que el email y la password tienen contenido:\n\n    if (typeof email === 'undefined' || typeof password === 'undefined') {\n      alert('Wrong credentials, please try again');\n    } //si tienen contenido, se comprueban con la api\n    else {\n      if (isCompany) {\n        let result = await fetch(\"https://vast-peak-05541.herokuapp.com/api/companies\", {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": 'application/json'\n          }\n        });\n        result = await result.json(); //comprobar si el usuario ya tiene una cuenta\n\n        if (!isRegistered(result)) {\n          alert('No account with this mail!');\n        } else {\n          //comprobar que la contraseña es correcta\n          localStorage.setItem('isAuthenticated', true);\n          localStorage.setItem('isCompany', true);\n          localStorage.setItem('userID', email);\n          localStorage.setItem('password', password);\n          navigate(\"/homeCompany\");\n        }\n      } //login de user\n      else {\n        let result = await fetch(\"https://vast-peak-05541.herokuapp.com/api/users\", {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": 'application/json'\n          }\n        });\n        result = await result.json(); //comprobar si el usuario ya tiene una cuenta\n\n        if (!isRegistered(result)) {\n          alert('No account with this mail!');\n        } else {\n          //comprobar que la contraseña es correcta\n          localStorage.setItem('isAuthenticated', true);\n          localStorage.setItem('isCompany', false);\n          localStorage.setItem('userID', email);\n          localStorage.setItem('password', password);\n          navigate(\"/homeUser\");\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'textAlign': 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"name@domain.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isCompany,\n              onChange: handleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 28\n            }, this), \" Log in as a company\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            className: \"btn btn-primary btn-block\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/recovery\",\n          children: \"Forgot password? Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 68\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"New user? Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginPage, \"xxogoxglmES+liH/4S5edKjjHGY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","Footer","LoginPage","navigate","email","setEmail","password","setPassword","isCompany","setChecked","isRegistered","registered","i","length","handleCheck","handleSubmit","event","preventDefault","alert","result","fetch","method","headers","json","localStorage","setItem","e","target","value"],"sources":["/Users/arnaullobet/Desktop/PAE/DOCBLOCK/react-dapp/client/src/Pages/loginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport NavBar from '../Components/navbar';\nimport Footer from '../Components/footer';\n\nexport default function LoginPage(){\n    const navigate = useNavigate();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [isCompany, setChecked] = useState(false);\n\n    function isRegistered(registered){\n        for(let i = 0; i<registered.length; ++i){\n            if(registered[i].email === email) return true;\n        }\n        return false;\n    }\n\n    const handleCheck = () =>{\n        setChecked(!isCompany);\n    };\n\n    async function handleSubmit (event) {\n        event.preventDefault();\n        //comprobacion de que el email y la password tienen contenido:\n        if (typeof email === 'undefined' || typeof password === 'undefined'){\n            alert('Wrong credentials, please try again');\n        }\n        //si tienen contenido, se comprueban con la api\n        else{\n            if(isCompany){\n                let result = await fetch(\"https://vast-peak-05541.herokuapp.com/api/companies\", {\n                    method:'GET',\n                    headers:{\n                        \"Content-Type\":'application/json',\n                    }\n                });\n                result = await result.json();\n\n                //comprobar si el usuario ya tiene una cuenta\n                if (!isRegistered(result)) {\n                    alert('No account with this mail!')\n                }\n                else {\n                    //comprobar que la contraseña es correcta\n                    localStorage.setItem('isAuthenticated', true);\n                    localStorage.setItem('isCompany', true);\n                    localStorage.setItem('userID', email);\n                    localStorage.setItem('password', password);\n                    navigate(\"/homeCompany\");\n                }\n            }\n            //login de user\n            else{\n                let result = await fetch(\"https://vast-peak-05541.herokuapp.com/api/users\", {\n                    method:'GET',\n                    headers:{\n                        \"Content-Type\":'application/json',\n                    }\n                });\n                result = await result.json();\n\n                //comprobar si el usuario ya tiene una cuenta\n                if (!isRegistered(result)) {\n                    alert('No account with this mail!')\n                }\n                else {\n                    //comprobar que la contraseña es correcta\n                    localStorage.setItem('isAuthenticated', true);\n                    localStorage.setItem('isCompany', false);\n                    localStorage.setItem('userID', email);\n                    localStorage.setItem('password', password);\n                    navigate(\"/homeUser\");\n                }\n            }\n        }\n    }\n\n    return(\n        <>\n        <NavBar></NavBar>\n        <div style={{'textAlign':'center'}}>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <p>Email</p>\n                    <input type=\"email\" onChange={e => setEmail(e.target.value)} placeholder=\"name@domain.com\"></input>\n                </div><br/>\n                <div>\n                    <p>Password</p>\n                    <input type=\"password\" onChange={e => setPassword(e.target.value)} placeholder=\"password\"></input>\n                    <br/><br/><br/>\n                    <label><input type=\"checkbox\" checked={isCompany} onChange={handleCheck}/> Log in as a company</label>\n                    <br/><br/>\n                </div>\n                <div>\n                    <button type='submit' onClick={handleSubmit} className=\"btn btn-primary btn-block\">Log in</button>\n                </div><br/>\n                <a href=\"/recovery\">Forgot password? Reset</a><br/><br/>\n                <a href=\"/signup\">New user? Sign up</a>\n            </form>\n        </div>\n        <Footer></Footer>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}