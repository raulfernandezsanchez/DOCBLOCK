[{"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\index.js":"1","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\reportWebVitals.js":"2","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\App.js":"3","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userPage.js":"4","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\validationPage.js":"5","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\homePage.js":"6","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\notFoundPage.js":"7","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\loginPage.js":"8","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userSettings.js":"9","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companySettings.js":"10","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\signupPage.js":"11","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\servicesPage.js":"12","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userContracts.js":"13","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyPage.js":"14","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\privateRoot.js":"15","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyContracts.js":"16","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\aboutPage.js":"17","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbaruser.js":"18","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbarcompany.js":"19","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\footer.js":"20","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbar.js":"21","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\popup.js":"22"},{"size":630,"mtime":1652432453321,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1652270151703,"results":"25","hashOfConfig":"24"},{"size":2086,"mtime":1652539220092,"results":"26","hashOfConfig":"24"},{"size":622,"mtime":1652625103421,"results":"27","hashOfConfig":"24"},{"size":1252,"mtime":1652625103421,"results":"28","hashOfConfig":"24"},{"size":3522,"mtime":1652434266758,"results":"29","hashOfConfig":"24"},{"size":728,"mtime":1652625103419,"results":"30","hashOfConfig":"24"},{"size":4124,"mtime":1652625103419,"results":"31","hashOfConfig":"24"},{"size":23953,"mtime":1652625103421,"results":"32","hashOfConfig":"24"},{"size":20210,"mtime":1652625103419,"results":"33","hashOfConfig":"24"},{"size":6078,"mtime":1652813625389,"results":"34","hashOfConfig":"24"},{"size":1264,"mtime":1652721207397,"results":"35","hashOfConfig":"24"},{"size":4155,"mtime":1652859840066,"results":"36","hashOfConfig":"24"},{"size":10619,"mtime":1652859840066,"results":"37","hashOfConfig":"24"},{"size":535,"mtime":1652270151696,"results":"38","hashOfConfig":"24"},{"size":7260,"mtime":1652859840065,"results":"39","hashOfConfig":"24"},{"size":4643,"mtime":1652625103418,"results":"40","hashOfConfig":"24"},{"size":2285,"mtime":1652860504326,"results":"41","hashOfConfig":"24"},{"size":2254,"mtime":1652860483341,"results":"42","hashOfConfig":"24"},{"size":1663,"mtime":1652539242216,"results":"43","hashOfConfig":"24"},{"size":2585,"mtime":1652715317817,"results":"44","hashOfConfig":"24"},{"size":416,"mtime":1652813625333,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1v0310o",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"49"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\index.js",[],[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\reportWebVitals.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\App.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\validationPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\homePage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\notFoundPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\loginPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userSettings.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companySettings.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\signupPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\servicesPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userContracts.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyPage.js",["116","117","118"],[],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport Footer from \"../Components/footer\";\r\nimport NavBarCompany from \"../Components/navbarcompany\";\r\nimport Popup from \"../Components/popup\"\r\nimport \"../css/companyPage.css\"\r\n\r\n\r\nfunction getUnique(arr, index) {\r\n  const unique = arr\r\n       .map(e => e[index])\r\n       // store the keys of the unique objects\r\n       .map((e, i, final) => final.indexOf(e) === i && i)\r\n       // eliminate the dead keys & store unique objects\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n   return unique;\r\n}\r\n\r\nexport default function CompanyPage(){\r\n\r\n    //popup button info\r\n    const [buttonPopupInfo, setButtonPopupInfo] = useState(false);\r\n    //popup button assigned\r\n    const [buttonPopupAssign, setButtonPopupAssign] = useState(false);\r\n\r\n    //popup info\r\n    const [popupUserName, setPopupUserName] = useState('');\r\n    const [popupUserEmail, setPopupUserEmail] = useState('');\r\n    const [popupUserContracts, setPopupUserContracts] = useState([]);\r\n\r\n    const companyID = localStorage.getItem('userID');\r\n    const companyName = localStorage.getItem('companyName');\r\n\r\n    // the value of the search field\r\n    const [name, setName] = useState('');\r\n\r\n    // the search result\r\n    const [foundUsers, setFoundUsers] = useState('');\r\n\r\n    // loaded users\r\n    const [loadedUsers, setLoadedUsers] = useState('');\r\n    // loaded contracts\r\n    const [foundContracts, setFoundContracts] = useState('');\r\n    //\r\n    const [assignedUser, setAssignedUser] = useState('');\r\n\r\n    // load users and contracts\r\n     React.useEffect(() => {\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/users\", {\r\n          method:'GET',\r\n          headers:{\r\n              \"Content-Type\":'application/json',\r\n          }\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n          let users = getUnique(data, 'name');\r\n          setFoundUsers(users);\r\n          setLoadedUsers(users);\r\n        });\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/contracts\", {\r\n            method:'GET',\r\n            headers:{\r\n                \"Content-Type\":'application/json',\r\n            }\r\n        }).then(response => response.json())\r\n          .then(data => {\r\n            let contracts = getUnique(data, 'name');\r\n            setFoundContracts(contracts);\r\n          });\r\n\r\n       }, []);\r\n\r\n    function handlePopupInfo(event, username, useremail, contracts) {\r\n      event.preventDefault();\r\n      setPopupUserName(username);\r\n      setPopupUserEmail(useremail);\r\n      setPopupUserContracts(contracts);\r\n      setButtonPopupInfo(true);\r\n    }\r\n\r\n    function handlePopupAssign(event, user) {\r\n      event.preventDefault();\r\n      setAssignedUser(user);\r\n      setButtonPopupAssign(true);\r\n    }\r\n\r\n    function isContractAssigned(contract) {\r\n      let already_assigned_contracts = assignedUser.assignedContracts;\r\n      let assign = false;\r\n      let i = 0;\r\n      while (!assign && i < already_assigned_contracts.length) {\r\n        if (contract == already_assigned_contracts[i]) {\r\n          assign = true;\r\n        }\r\n        ++i;\r\n      }\r\n      return assign;\r\n    }\r\n\r\n    function assignContract(event, contract) {\r\n      event.preventDefault();\r\n\r\n      if (!isContractAssigned(contract)) {\r\n        let new_contract = {\r\n          userassignedContracts : contract\r\n        }\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/users/\" + assignedUser._id, {\r\n            body: JSON.stringify(new_contract),\r\n            method:'PUT',\r\n            headers:{\r\n                \"Content-Type\":'application/json',\r\n            }\r\n        }).then(response => response.json())\r\n          .then(data => {\r\n            console.log(assignedUser);\r\n          });\r\n\r\n      } else {\r\n        console.log(\"Contract already assigned!\");\r\n      }\r\n    }\r\n\r\n    const filter = (e) => {\r\n      const keyword = e.target.value;\r\n\r\n      if (keyword !== '') {\r\n        const results = foundUsers.filter((user) => {\r\n          return user.name.toLowerCase().startsWith(keyword.toLowerCase());\r\n          // Use the toLowerCase() method to make it case-insensitive\r\n        });\r\n        setFoundUsers(results);\r\n      } else {\r\n        setFoundUsers(loadedUsers);\r\n        // If the text field is empty, show all users\r\n      }\r\n      setName(keyword);\r\n    };\r\n    return (\r\n        <>\r\n        <NavBarCompany></NavBarCompany>\r\n        <div className=\"about-section\" width=\"100%\">\r\n            <h1>{companyName}</h1>\r\n            <p>{companyID}</p>\r\n        </div>\r\n        <div className=\"container search-wrapper\">\r\n        <h2>Users</h2>\r\n        <div className=\"rounded\">\r\n          <input type=\"search\" value={name} onChange={filter} className=\"input form-control rounded\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"search-addon\" />\r\n        </div>\r\n        <div className=\"row\">\r\n        \t<div className=\"col-lg-12\">\r\n        \t\t<div className=\"main-box clearfix\">\r\n        \t\t\t<div className=\"table-responsive\">\r\n                <table className=\"table user-list\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th><span>User</span></th>\r\n                      <th><span>Email</span></th>\r\n                      <th>&nbsp;</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {foundUsers && foundUsers.length > 0 ? (\r\n                      foundUsers.map((user) => (\r\n                        <tr key={user.id} className=\"user\">\r\n                          <td className=\"user-id\">{user.name}</td>\r\n                          <td className=\"user-name\">{user.email}</td>\r\n                          <td>\r\n                          <div className=\"row\">\r\n                            <div className=\"col d-flex justify-content-center\">\r\n                              <a onClick={(e) => handlePopupInfo(e, user.name, user.email, user.assignedContracts)} className=\"table-link\">\r\n                                <span className=\"fa-stack info-button\">\r\n                                  <i className=\"fa fa-square fa-stack-2x\"></i>\r\n                                  <i className=\"fa fa-info-circle fa-stack-1x fa-inverse\"></i>\r\n                                </span>\r\n                                <div className=\"hide hide-info-button\">User information</div>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"col d-flex justify-content-center\">\r\n                              <a onClick={(e) => handlePopupAssign(e, user)} className=\"table-link\">\r\n                                  <span className=\"fa-stack assign-button\">\r\n                                      <i className=\"fa fa-square fa-stack-2x\"></i>\r\n                                      <i className=\"fa fa-file fa-stack-1x fa-inverse\"></i>\r\n                                  </span>\r\n                                  <div className=\"hide hide-assign-button\">Assign contract</div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td colSpan=\"3\">User not found.</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                  </table>\r\n          \t\t\t</div>\r\n          \t\t</div>\r\n          \t</div>\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n        <Popup trigger={buttonPopupInfo} setTrigger={setButtonPopupInfo}>\r\n          <div className=\"popup-user-info\">\r\n            <div className=\"row name\">\r\n              {popupUserName}\r\n            </div>\r\n            <div className=\"row\">\r\n              {popupUserEmail}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"main-box clearfix\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table user-list\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th><span>Contract</span></th>\r\n                        <th><span>Status</span></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {popupUserContracts && popupUserContracts.length > 0 ? (\r\n                        popupUserContracts.map((contract) => (\r\n                          <tr key={contract} className=\"\">\r\n                            <td className=\"user-id\">{contract}</td>\r\n                            <td className=\"user-name\"><span className=\"c-pill c-pill--warning\">Pending</span></td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"2\">No contracts assigned!</td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Popup>\r\n        <Popup trigger={buttonPopupAssign} setTrigger={setButtonPopupAssign}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"main-box clearfix\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table user-list\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th><span>Contract</span></th>\r\n                        <th>&nbsp;</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {foundContracts && foundContracts.length > 0 ? (\r\n                        foundContracts.map((contract) => (\r\n                          <tr key={contract.name} className=\"\">\r\n                            <td className=\"user-id\">{contract.name}</td>\r\n                            <td>\r\n                              <button onClick={(e) => assignContract(e, contract.name)} type=\"button\" className=\"btn btn-primary\">Assign</button>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"2\">No contracts available!</td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Popup>\r\n        </>\r\n    );\r\n}\r\n","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\privateRoot.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyContracts.js",["119"],[],"import React, { useState } from \"react\";\r\n\r\nimport Footer from \"../Components/footer\";\r\nimport NavBarCompany from \"../Components/navbarcompany\";\r\n\r\nfunction getUnique(arr, index) {\r\n  const unique = arr\r\n       .map(e => e[index])\r\n       // store the keys of the unique objects\r\n       .map((e, i, final) => final.indexOf(e) === i && i)\r\n       // eliminate the dead keys & store unique objects\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n   return unique;\r\n}\r\n\r\nexport default function CompanyContracts(){\r\n\r\n    // the value of the search field\r\n    const [filename, setFilename] = useState('');\r\n    const [fileContent, setFileContent] = useState('');\r\n    // the search result\r\n    const [foundContract, setFoundContract] = useState('');\r\n\r\n    // loaded contracts\r\n    const [loadedContracts, setLoadedContracts] = useState('');\r\n\r\n    React.useEffect(() => {\r\n       fetch(\"https://vast-peak-05541.herokuapp.com/api/contracts\", {\r\n         method:'GET',\r\n         headers:{\r\n             \"Content-Type\":'application/json',\r\n         }\r\n     }).then(response => response.json())\r\n       .then(data => {\r\n         let contracts = getUnique(data, 'name');\r\n         setFoundContract(contracts);\r\n         setLoadedContracts(contracts);\r\n       });\r\n   }, []);\r\n\r\n    function updateFilename(e){\r\n        e.preventDefault();\r\n        setFilename(e.target.files[0].name);\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) =>{\r\n            setFileContent(e.target.result);\r\n        };\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    function uploadFile(){\r\n      alert('File '+ filename +' updated')\r\n      localStorage.setItem('contractFile', filename);\r\n      localStorage.setItem('contractContent', fileContent);\r\n    }\r\n\r\n\r\n   const filter = (e) => {\r\n     const keyword = e.target.value;\r\n\r\n     if (keyword !== '') {\r\n       const results = foundContract.filter((contract) => {\r\n         return contract.name.toLowerCase().startsWith(keyword.toLowerCase());\r\n         // Use the toLowerCase() method to make it case-insensitive\r\n       });\r\n       setFoundContract(results);\r\n     } else {\r\n       setFoundContract(loadedContracts);\r\n       // If the text field is empty, show all users\r\n     }\r\n     setFilename(keyword);\r\n   };\r\n\r\n    return (\r\n        <>\r\n        <NavBarCompany></NavBarCompany>\r\n        <div className=\"about-section\" width=\"100%\">\r\n            <h1>Contracts</h1>\r\n            <p>Current contracts uploaded.</p>\r\n        </div>\r\n        <div id=\"services\" style={{'marginLeft': '20px'}}>\r\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <button className=\"nav-link active\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"true\">My contracts</button>\r\n                </li>\r\n                <li className=\"nav-item\" role=\"presentation\">\r\n                    <button className=\"nav-link\" id=\"notifications-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#notifications\" type=\"button\" role=\"tab\" aria-controls=\"notifications\" aria-selected=\"false\">New contract</button>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade align-items-start show active\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                    <div className=\"container search-wrapper\">\r\n                    <h2>Contracts</h2>\r\n                    <div className=\"input-group rounded\">\r\n                      <input type=\"search\" value={filename} onChange={filter} className=\"input form-control rounded\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"search-addon\" />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    \t<div className=\"col-lg-12\">\r\n                    \t\t<div className=\"main-box clearfix\">\r\n                    \t\t\t<div className=\"table-responsive\">\r\n                            <table className=\"table user-list\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th><span>Document</span></th>\r\n                                  <th><span>Visualization</span></th>\r\n                                  <th>&nbsp;</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {foundContract && foundContract.length > 0 ? (\r\n                                  foundContract.map((contract) => (\r\n                                    <tr key={contract.id} className=\"contract\">\r\n                                      <td className=\"user-id\">{contract.name}</td>\r\n                                      <td className=\"user-name\">{contract.url}</td>\r\n                                      <td>\r\n                                        <a href=\"#\" className=\"table-link\">\r\n                        \t\t\t\t\t\t\t\t\t<span className=\"fa-stack\">\r\n                        \t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-square fa-stack-2x\"></i>\r\n                        \t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-search-plus fa-stack-1x fa-inverse\"></i>\r\n                        \t\t\t\t\t\t\t\t\t</span>\r\n                        \t\t\t\t\t\t\t\t</a>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ))\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                              </table>\r\n                      \t\t\t</div>\r\n                      \t\t</div>\r\n                      \t</div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"notifications\" role=\"tabpanel\" aria-labelledby=\"notifications-tab\">\r\n                    <div className=\"row justify-content-around\">\r\n                        <div className=\"col-sm-4\">\r\n                            <label htmlFor=\"formFile\" className=\"form-label\">Select a contract to upload\r\n                                <input className=\"form-control\" type=\"file\" accept=\".pdf\" id=\"formFile\" onChange={updateFilename}/>\r\n                            </label>\r\n                            <br/>\r\n                            {/*<a href={filename} target='_blank' className=\"btn btn-primary btn-block\" rel='noopener noreferrer' onClick={() => alert(filename)}>Upload</a>*/}\r\n                            <button className=\"btn btn-primary btn-block\" onClick={uploadFile}>Upload</button>\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                        {fileContent ? <iframe src={fileContent} title='PDF' width=\"100%\" height={window.innerHeight*0.85}></iframe> : <></>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer></Footer>\r\n        </>\r\n    );\r\n}\r\n","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\aboutPage.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbaruser.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbarcompany.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\footer.js",[],[],"D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbar.js",["120","121"],[],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../css/navbar.css'\r\n\r\nconst NavBar = () =>{\r\n    const [display, setDisplay] = useState('none');\r\n    const handleCheck = () =>{\r\n        if (display === 'none'){\r\n            setDisplay('block')\r\n        }\r\n        else{\r\n            setDisplay('none')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container px-4\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                  <img className=\"img-fluid rounded mx-2 mb-4 mb-lg-0\" src={require(\"../Assets/logo_no_background.png\")} width=\"50\" height=\"50\" alt=\"Dockblock logo\" />\r\n                  DocBlock\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\" id=\"menu\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/about\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>About</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/services\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>Services</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/validation\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>Validation</NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <a href=\"#\"> User</a>\r\n                          <ul className=\"menu-vertical\">\r\n                            <li><a href=\"/login\">Log in</a></li>\r\n                            <li><a href=\"/signup\">Sign up</a></li>\r\n                          </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </>\r\n    );\r\n}\r\nexport default NavBar;\r\n","D:\\UNI\\7è Q\\DOCBLOCK\\react-dapp\\client\\src\\Components\\popup.js",[],[],{"ruleId":"122","severity":1,"message":"123","line":92,"column":22,"nodeType":"124","messageId":"125","endLine":92,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":171,"column":31,"nodeType":"128","endLine":171,"endColumn":140},{"ruleId":"126","severity":1,"message":"127","line":180,"column":31,"nodeType":"128","endLine":180,"endColumn":101},{"ruleId":"126","severity":1,"message":"129","line":116,"column":41,"nodeType":"128","endLine":116,"endColumn":76},{"ruleId":"130","severity":1,"message":"131","line":7,"column":11,"nodeType":"132","messageId":"133","endLine":7,"endColumn":22},{"ruleId":"126","severity":1,"message":"129","line":39,"column":27,"nodeType":"128","endLine":39,"endColumn":39},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'handleCheck' is assigned a value but never used.","Identifier","unusedVar"]