[{"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\index.js":"1","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\reportWebVitals.js":"2","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\App.js":"3","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyContracts.js":"4","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\notFoundPage.js":"5","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\aboutPage.js":"6","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\homePage.js":"7","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\loginPage.js":"8","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\servicesPage.js":"9","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userPage.js":"10","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\signupPage.js":"11","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userSettings.js":"12","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\validationPage.js":"13","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userContracts.js":"14","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyPage.js":"15","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companySettings.js":"16","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\privateRoot.js":"17","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbar.js":"18","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbaruser.js":"19","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbarcompany.js":"20","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\footer.js":"21","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\popup.js":"22","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\UploadImageToS3WithReactS3.js":"23"},{"size":630,"mtime":1652790872800,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1652790872801,"results":"26","hashOfConfig":"25"},{"size":2086,"mtime":1652790872765,"results":"27","hashOfConfig":"25"},{"size":7832,"mtime":1653211080583,"results":"28","hashOfConfig":"25"},{"size":728,"mtime":1652990377066,"results":"29","hashOfConfig":"25"},{"size":4643,"mtime":1652990377060,"results":"30","hashOfConfig":"25"},{"size":3522,"mtime":1652990377065,"results":"31","hashOfConfig":"25"},{"size":4124,"mtime":1652990377065,"results":"32","hashOfConfig":"25"},{"size":1264,"mtime":1652990377066,"results":"33","hashOfConfig":"25"},{"size":7179,"mtime":1652990391293,"results":"34","hashOfConfig":"25"},{"size":6078,"mtime":1652990377067,"results":"35","hashOfConfig":"25"},{"size":23953,"mtime":1652990377069,"results":"36","hashOfConfig":"25"},{"size":1252,"mtime":1652990377071,"results":"37","hashOfConfig":"25"},{"size":4155,"mtime":1652990391292,"results":"38","hashOfConfig":"25"},{"size":10619,"mtime":1652990391292,"results":"39","hashOfConfig":"25"},{"size":20210,"mtime":1652990377064,"results":"40","hashOfConfig":"25"},{"size":535,"mtime":1652790872779,"results":"41","hashOfConfig":"25"},{"size":2585,"mtime":1652990377058,"results":"42","hashOfConfig":"25"},{"size":2285,"mtime":1652990391290,"results":"43","hashOfConfig":"25"},{"size":2254,"mtime":1652990391289,"results":"44","hashOfConfig":"25"},{"size":1663,"mtime":1652790872777,"results":"45","hashOfConfig":"25"},{"size":416,"mtime":1652990377059,"results":"46","hashOfConfig":"25"},{"size":1937,"mtime":1653322375679,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"670swu",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"51"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\index.js",[],[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\App.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyContracts.js",["121","122","123","124","125","126"],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\notFoundPage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\aboutPage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\homePage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\loginPage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\servicesPage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userPage.js",["127","128","129","130","131","132","133","134","135","136","137"],[],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport Footer from \"../Components/footer\";\r\nimport NavBarUser from \"../Components/navbaruser\";\r\nimport Popup from \"../Components/popup\"\r\nimport \"../css/companyPage.css\"\r\n\r\nfunction getUnique(arr, index) {\r\n  const unique = arr\r\n       .map(e => e[index])\r\n       // store the keys of the unique objects\r\n       .map((e, i, final) => final.indexOf(e) === i && i)\r\n       // eliminate the dead keys & store unique objects\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n   return unique;\r\n}\r\n\r\nfunction getMyUser(arr, email) {\r\n  const myuser = arr.filter(user => user.email == email);\r\n  return myuser;\r\n}\r\n\r\nexport default function CompanyPage(){\r\n\r\n    //popup button info\r\n    const [buttonPopupInfo, setButtonPopupInfo] = useState(false);\r\n    //popup button assigned\r\n    const [buttonPopupAssign, setButtonPopupAssign] = useState(false);\r\n\r\n    //popup info\r\n    const [popupUserName, setPopupUserName] = useState('');\r\n    const [popupUserEmail, setPopupUserEmail] = useState('');\r\n    const [popupUserContracts, setPopupUserContracts] = useState([]);\r\n\r\n    const userID = localStorage.getItem('userID');\r\n    //const userName = localStorage.getItem('userName');\r\n    // the value of the search field\r\n    const [name, setName] = useState('');\r\n\r\n    // the search result\r\n    const [foundUsers, setFoundUsers] = useState('');\r\n\r\n    // loaded users\r\n    const [loadedUsers, setLoadedUsers] = useState('');\r\n    // loaded contracts\r\n    const [foundContracts, setFoundContracts] = useState('');\r\n    //\r\n    const [assignedUser, setAssignedUser] = useState('');\r\n\r\n    // load users and contracts\r\n     React.useEffect(() => {\r\n       fetch(\"https://vast-peak-05541.herokuapp.com/api/users/\", {\r\n           method:'GET',\r\n           headers:{\r\n               \"Content-Type\":'application/json',\r\n           }\r\n       }).then(response => response.json())\r\n         .then(data => {\r\n           let user = getUnique(data, 'name');\r\n           let myUser = getMyUser(user, userID);\r\n           setFoundUsers(myUser);\r\n           setLoadedUsers(myUser);\r\n         });\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/contracts\", {\r\n            method:'GET',\r\n            headers:{\r\n                \"Content-Type\":'application/json',\r\n            }\r\n        }).then(response => response.json())\r\n          .then(data => {\r\n            let contracts = getUnique(data, 'name');\r\n            setFoundContracts(contracts);\r\n          });\r\n\r\n       }, []);\r\n\r\n       function handlePopupInfo(event, username, useremail, contracts) {\r\n         event.preventDefault();\r\n         setPopupUserName(username);\r\n         setPopupUserEmail(useremail);\r\n         setPopupUserContracts(contracts);\r\n         setButtonPopupInfo(true);\r\n       }\r\n\r\n    return (\r\n        <>\r\n        <NavBarUser></NavBarUser>\r\n        <div className=\"about-section\" width=\"100%\">\r\n            <h1>{userID}</h1>\r\n            <p>{userID}</p>\r\n        </div>\r\n        <div className=\"container search-wrapper\">\r\n          <h2>{userID}</h2>\r\n          <div className=\"row\">\r\n          \t<div className=\"col-lg-12\">\r\n          \t\t<div className=\"main-box clearfix\">\r\n          \t\t\t<div className=\"table-responsive\">\r\n                  <table className=\"table user-list\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th><span>User</span></th>\r\n                        <th><span>Email</span></th>\r\n                        <th>&nbsp;</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {foundUsers && foundUsers.length > 0 ? (\r\n                        foundUsers.map((user) => (\r\n                          <tr key={user.id} className=\"user\">\r\n                            <td className=\"user-id\">{user.name}</td>\r\n                            <td className=\"user-name\">{user.email}</td>\r\n                            <td>\r\n                              <div className=\"col d-flex justify-content-center\">\r\n                                <a onClick={(e) => handlePopupInfo(e, user.name, user.email, user.assignedContracts)} className=\"table-link\">\r\n                                  <span className=\"fa-stack info-button\">\r\n                                    <i className=\"fa fa-square fa-stack-2x\"></i>\r\n                                    <i className=\"fa fa-info-circle fa-stack-1x fa-inverse\"></i>\r\n                                  </span>\r\n                                  <div className=\"hide hide-info-button\">User information</div>\r\n                                </a>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"3\">User not found.</td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    </table>\r\n            \t\t\t</div>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n          </div>\r\n          <Footer></Footer>\r\n          <Popup trigger={buttonPopupInfo} setTrigger={setButtonPopupInfo}>\r\n            <div className=\"popup-user-info\">\r\n              <div className=\"row name\">\r\n                {popupUserName}\r\n              </div>\r\n              <div className=\"row\">\r\n                {popupUserEmail}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"main-box clearfix\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table user-list\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th><span>Contract</span></th>\r\n                          <th><span>Status</span></th>\r\n                          <th><span>Action</span></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {popupUserContracts && popupUserContracts.length > 0 ? (\r\n                          popupUserContracts.map((contract) => (\r\n                            <tr key={contract} className=\"\">\r\n                              <td className=\"user-id\">{contract}</td>\r\n                              <td className=\"user-name\"><span className=\"c-pill c-pill--warning\">Pending</span></td>\r\n                              <td>\r\n                                <div className=\"col d-flex justify-content-center\">\r\n                                    <button className=\"button\" variant=\"primary\">Firm</button>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          ))\r\n                        ) : (\r\n                          <tr>\r\n                            <td colSpan=\"2\">No contracts assigned!</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </Popup>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\signupPage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userSettings.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\validationPage.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\userContracts.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companyPage.js",["138","139","140"],[],"import React from \"react\";\r\nimport { useState } from 'react';\r\nimport Footer from \"../Components/footer\";\r\nimport NavBarCompany from \"../Components/navbarcompany\";\r\nimport Popup from \"../Components/popup\"\r\nimport \"../css/companyPage.css\"\r\n\r\n\r\nfunction getUnique(arr, index) {\r\n  const unique = arr\r\n       .map(e => e[index])\r\n       // store the keys of the unique objects\r\n       .map((e, i, final) => final.indexOf(e) === i && i)\r\n       // eliminate the dead keys & store unique objects\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n   return unique;\r\n}\r\n\r\nexport default function CompanyPage(){\r\n\r\n    //popup button info\r\n    const [buttonPopupInfo, setButtonPopupInfo] = useState(false);\r\n    //popup button assigned\r\n    const [buttonPopupAssign, setButtonPopupAssign] = useState(false);\r\n\r\n    //popup info\r\n    const [popupUserName, setPopupUserName] = useState('');\r\n    const [popupUserEmail, setPopupUserEmail] = useState('');\r\n    const [popupUserContracts, setPopupUserContracts] = useState([]);\r\n\r\n    const companyID = localStorage.getItem('userID');\r\n    const companyName = localStorage.getItem('companyName');\r\n\r\n    // the value of the search field\r\n    const [name, setName] = useState('');\r\n\r\n    // the search result\r\n    const [foundUsers, setFoundUsers] = useState('');\r\n\r\n    // loaded users\r\n    const [loadedUsers, setLoadedUsers] = useState('');\r\n    // loaded contracts\r\n    const [foundContracts, setFoundContracts] = useState('');\r\n    //\r\n    const [assignedUser, setAssignedUser] = useState('');\r\n\r\n    // load users and contracts\r\n     React.useEffect(() => {\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/users\", {\r\n          method:'GET',\r\n          headers:{\r\n              \"Content-Type\":'application/json',\r\n          }\r\n        }).then(response => response.json())\r\n        .then(data => {\r\n          let users = getUnique(data, 'name');\r\n          setFoundUsers(users);\r\n          setLoadedUsers(users);\r\n        });\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/contracts\", {\r\n            method:'GET',\r\n            headers:{\r\n                \"Content-Type\":'application/json',\r\n            }\r\n        }).then(response => response.json())\r\n          .then(data => {\r\n            let contracts = getUnique(data, 'name');\r\n            setFoundContracts(contracts);\r\n          });\r\n\r\n       }, []);\r\n\r\n    function handlePopupInfo(event, username, useremail, contracts) {\r\n      event.preventDefault();\r\n      setPopupUserName(username);\r\n      setPopupUserEmail(useremail);\r\n      setPopupUserContracts(contracts);\r\n      setButtonPopupInfo(true);\r\n    }\r\n\r\n    function handlePopupAssign(event, user) {\r\n      event.preventDefault();\r\n      setAssignedUser(user);\r\n      setButtonPopupAssign(true);\r\n    }\r\n\r\n    function isContractAssigned(contract) {\r\n      let already_assigned_contracts = assignedUser.assignedContracts;\r\n      let assign = false;\r\n      let i = 0;\r\n      while (!assign && i < already_assigned_contracts.length) {\r\n        if (contract == already_assigned_contracts[i]) {\r\n          assign = true;\r\n        }\r\n        ++i;\r\n      }\r\n      return assign;\r\n    }\r\n\r\n    function assignContract(event, contract) {\r\n      event.preventDefault();\r\n\r\n      if (!isContractAssigned(contract)) {\r\n        let new_contract = {\r\n          userassignedContracts : contract\r\n        }\r\n        fetch(\"https://vast-peak-05541.herokuapp.com/api/users/\" + assignedUser._id, {\r\n            body: JSON.stringify(new_contract),\r\n            method:'PUT',\r\n            headers:{\r\n                \"Content-Type\":'application/json',\r\n            }\r\n        }).then(response => response.json())\r\n          .then(data => {\r\n            console.log(assignedUser);\r\n          });\r\n\r\n      } else {\r\n        console.log(\"Contract already assigned!\");\r\n      }\r\n    }\r\n\r\n    const filter = (e) => {\r\n      const keyword = e.target.value;\r\n\r\n      if (keyword !== '') {\r\n        const results = foundUsers.filter((user) => {\r\n          return user.name.toLowerCase().startsWith(keyword.toLowerCase());\r\n          // Use the toLowerCase() method to make it case-insensitive\r\n        });\r\n        setFoundUsers(results);\r\n      } else {\r\n        setFoundUsers(loadedUsers);\r\n        // If the text field is empty, show all users\r\n      }\r\n      setName(keyword);\r\n    };\r\n    return (\r\n        <>\r\n        <NavBarCompany></NavBarCompany>\r\n        <div className=\"about-section\" width=\"100%\">\r\n            <h1>{companyName}</h1>\r\n            <p>{companyID}</p>\r\n        </div>\r\n        <div className=\"container search-wrapper\">\r\n        <h2>Users</h2>\r\n        <div className=\"rounded\">\r\n          <input type=\"search\" value={name} onChange={filter} className=\"input form-control rounded\" placeholder=\"Search\" aria-label=\"Search\" aria-describedby=\"search-addon\" />\r\n        </div>\r\n        <div className=\"row\">\r\n        \t<div className=\"col-lg-12\">\r\n        \t\t<div className=\"main-box clearfix\">\r\n        \t\t\t<div className=\"table-responsive\">\r\n                <table className=\"table user-list\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th><span>User</span></th>\r\n                      <th><span>Email</span></th>\r\n                      <th>&nbsp;</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {foundUsers && foundUsers.length > 0 ? (\r\n                      foundUsers.map((user) => (\r\n                        <tr key={user.id} className=\"user\">\r\n                          <td className=\"user-id\">{user.name}</td>\r\n                          <td className=\"user-name\">{user.email}</td>\r\n                          <td>\r\n                          <div className=\"row\">\r\n                            <div className=\"col d-flex justify-content-center\">\r\n                              <a onClick={(e) => handlePopupInfo(e, user.name, user.email, user.assignedContracts)} className=\"table-link\">\r\n                                <span className=\"fa-stack info-button\">\r\n                                  <i className=\"fa fa-square fa-stack-2x\"></i>\r\n                                  <i className=\"fa fa-info-circle fa-stack-1x fa-inverse\"></i>\r\n                                </span>\r\n                                <div className=\"hide hide-info-button\">User information</div>\r\n                              </a>\r\n                            </div>\r\n                            <div className=\"col d-flex justify-content-center\">\r\n                              <a onClick={(e) => handlePopupAssign(e, user)} className=\"table-link\">\r\n                                  <span className=\"fa-stack assign-button\">\r\n                                      <i className=\"fa fa-square fa-stack-2x\"></i>\r\n                                      <i className=\"fa fa-file fa-stack-1x fa-inverse\"></i>\r\n                                  </span>\r\n                                  <div className=\"hide hide-assign-button\">Assign contract</div>\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td colSpan=\"3\">User not found.</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                  </table>\r\n          \t\t\t</div>\r\n          \t\t</div>\r\n          \t</div>\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n        <Popup trigger={buttonPopupInfo} setTrigger={setButtonPopupInfo}>\r\n          <div className=\"popup-user-info\">\r\n            <div className=\"row name\">\r\n              {popupUserName}\r\n            </div>\r\n            <div className=\"row\">\r\n              {popupUserEmail}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"main-box clearfix\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table user-list\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th><span>Contract</span></th>\r\n                        <th><span>Status</span></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {popupUserContracts && popupUserContracts.length > 0 ? (\r\n                        popupUserContracts.map((contract) => (\r\n                          <tr key={contract} className=\"\">\r\n                            <td className=\"user-id\">{contract}</td>\r\n                            <td className=\"user-name\"><span className=\"c-pill c-pill--warning\">Pending</span></td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"2\">No contracts assigned!</td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Popup>\r\n        <Popup trigger={buttonPopupAssign} setTrigger={setButtonPopupAssign}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"main-box clearfix\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table user-list\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th><span>Contract</span></th>\r\n                        <th>&nbsp;</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {foundContracts && foundContracts.length > 0 ? (\r\n                        foundContracts.map((contract) => (\r\n                          <tr key={contract.name} className=\"\">\r\n                            <td className=\"user-id\">{contract.name}</td>\r\n                            <td>\r\n                              <button onClick={(e) => assignContract(e, contract.name)} type=\"button\" className=\"btn btn-primary\">Assign</button>\r\n                            </td>\r\n                          </tr>\r\n                        ))\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"2\">No contracts available!</td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </Popup>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Pages\\companySettings.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\privateRoot.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbar.js",["141","142"],[],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../css/navbar.css'\r\n\r\nconst NavBar = () =>{\r\n    const [display, setDisplay] = useState('none');\r\n    const handleCheck = () =>{\r\n        if (display === 'none'){\r\n            setDisplay('block')\r\n        }\r\n        else{\r\n            setDisplay('none')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container px-4\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                  <img className=\"img-fluid rounded mx-2 mb-4 mb-lg-0\" src={require(\"../Assets/logo_no_background.png\")} width=\"50\" height=\"50\" alt=\"Dockblock logo\" />\r\n                  DocBlock\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\" id=\"menu\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/about\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>About</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/services\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>Services</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/validation\" className={({isActive})=>(isActive ? \"nav-link active\" : \"nav-link\")}>Validation</NavLink>\r\n                        </li>\r\n                        <li>\r\n                          <a href=\"#\"> User</a>\r\n                          <ul className=\"menu-vertical\">\r\n                            <li><a href=\"/login\">Log in</a></li>\r\n                            <li><a href=\"/signup\">Sign up</a></li>\r\n                          </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </>\r\n    );\r\n}\r\nexport default NavBar;\r\n","C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbaruser.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\navbarcompany.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\footer.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\popup.js",[],[],"C:\\Users\\raulf\\Desktop\\DOCKBLOCK\\DOCBLOCK\\react-dapp\\client\\src\\Components\\UploadImageToS3WithReactS3.js",["143","144","145","146","147","148"],[],{"ruleId":"149","severity":1,"message":"150","line":44,"column":12,"nodeType":"151","messageId":"152","endLine":44,"endColumn":20},{"ruleId":"149","severity":1,"message":"153","line":45,"column":12,"nodeType":"151","messageId":"152","endLine":45,"endColumn":24},{"ruleId":"149","severity":1,"message":"154","line":61,"column":12,"nodeType":"151","messageId":"152","endLine":61,"endColumn":26},{"ruleId":"149","severity":1,"message":"155","line":71,"column":9,"nodeType":"151","messageId":"152","endLine":71,"endColumn":24},{"ruleId":"149","severity":1,"message":"156","line":83,"column":11,"nodeType":"151","messageId":"152","endLine":83,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":162,"column":41,"nodeType":"159","endLine":162,"endColumn":76},{"ruleId":"160","severity":1,"message":"161","line":19,"column":48,"nodeType":"162","messageId":"163","endLine":19,"endColumn":50},{"ruleId":"149","severity":1,"message":"164","line":28,"column":12,"nodeType":"151","messageId":"152","endLine":28,"endColumn":29},{"ruleId":"149","severity":1,"message":"165","line":28,"column":31,"nodeType":"151","messageId":"152","endLine":28,"endColumn":51},{"ruleId":"149","severity":1,"message":"166","line":38,"column":12,"nodeType":"151","messageId":"152","endLine":38,"endColumn":16},{"ruleId":"149","severity":1,"message":"167","line":38,"column":18,"nodeType":"151","messageId":"152","endLine":38,"endColumn":25},{"ruleId":"149","severity":1,"message":"168","line":44,"column":12,"nodeType":"151","messageId":"152","endLine":44,"endColumn":23},{"ruleId":"149","severity":1,"message":"169","line":46,"column":12,"nodeType":"151","messageId":"152","endLine":46,"endColumn":26},{"ruleId":"149","severity":1,"message":"170","line":48,"column":12,"nodeType":"151","messageId":"152","endLine":48,"endColumn":24},{"ruleId":"149","severity":1,"message":"171","line":48,"column":26,"nodeType":"151","messageId":"152","endLine":48,"endColumn":41},{"ruleId":"172","severity":1,"message":"173","line":75,"column":11,"nodeType":"174","endLine":75,"endColumn":13,"suggestions":"175"},{"ruleId":"157","severity":1,"message":"176","line":114,"column":33,"nodeType":"159","endLine":114,"endColumn":142},{"ruleId":"160","severity":1,"message":"161","line":92,"column":22,"nodeType":"162","messageId":"163","endLine":92,"endColumn":24},{"ruleId":"157","severity":1,"message":"176","line":171,"column":31,"nodeType":"159","endLine":171,"endColumn":140},{"ruleId":"157","severity":1,"message":"176","line":180,"column":31,"nodeType":"159","endLine":180,"endColumn":101},{"ruleId":"149","severity":1,"message":"177","line":7,"column":11,"nodeType":"151","messageId":"152","endLine":7,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":39,"column":27,"nodeType":"159","endLine":39,"endColumn":39},{"ruleId":"149","severity":1,"message":"178","line":21,"column":12,"nodeType":"151","messageId":"152","endLine":21,"endColumn":23},{"ruleId":"149","severity":1,"message":"179","line":21,"column":25,"nodeType":"151","messageId":"152","endLine":21,"endColumn":39},{"ruleId":"149","severity":1,"message":"180","line":22,"column":12,"nodeType":"151","messageId":"152","endLine":22,"endColumn":20},{"ruleId":"149","severity":1,"message":"181","line":22,"column":22,"nodeType":"151","messageId":"152","endLine":22,"endColumn":33},{"ruleId":"149","severity":1,"message":"166","line":23,"column":12,"nodeType":"151","messageId":"152","endLine":23,"endColumn":16},{"ruleId":"149","severity":1,"message":"182","line":23,"column":18,"nodeType":"151","messageId":"152","endLine":23,"endColumn":25},"no-unused-vars","'progress' is assigned a value but never used.","Identifier","unusedVar","'selectedFile' is assigned a value but never used.","'updateFilename' is defined but never used.","'handleFileInput' is assigned a value but never used.","'uploadFile' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buttonPopupAssign' is assigned a value but never used.","'setButtonPopupAssign' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'loadedUsers' is assigned a value but never used.","'foundContracts' is assigned a value but never used.","'assignedUser' is assigned a value but never used.","'setAssignedUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.","ArrayExpression",["183"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'handleCheck' is assigned a value but never used.","'fileContent' is assigned a value but never used.","'setFileContent' is assigned a value but never used.","'filename' is assigned a value but never used.","'setFilename' is assigned a value but never used.","'setname' is assigned a value but never used.",{"desc":"184","fix":"185"},"Update the dependencies array to be: [userID]",{"range":"186","text":"187"},[2518,2520],"[userID]"]